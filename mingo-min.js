(function(){function normalize(value){for(var i=0;i<primitives.length;i++)if(primitives[i](value))return{$eq:value};return _.isRegExp(value)?{$regex:value}:value}function flatten(obj,args,action){for(var i=0;i<args.length;i++)_.isString(args[i])&&args[i].startsWith("$")&&(args[i]=mingo._resolve(obj,args[i].substr(1))),"function"==typeof action&&action(args[i]);return args}function accumulate(collection,field,expr){if(_.contains(Ops.groupOperators,field))return groupOperators[field](collection,expr);if(_.isObject(expr)){var result={};for(var key in expr)if(result[key]=accumulate(collection,key,expr[key]),_.contains(Ops.groupOperators,key)){result=result[key];break}return result}return null}function computeField(record,field,expr){if(_.contains(Ops.aggregateOperators,field))return aggregateOperators[field](record,expr);if(_.isString(expr)&&expr.startsWith("$"))return mingo._resolve(record,expr.substr(1));if(_.isObject(expr)){var result={};for(var key in expr)if(result[key]=computeField(record,key,expr[key]),_.contains(Ops.aggregateOperators,key)){result=result[key];break}return result}return void 0}var previous_mingo,_,root=this,mingo={};null!=root&&(previous_mingo=root.mingo),mingo.noConflict=function(){return root.mingo=previous_mingo,mingo},"undefined"!=typeof exports?(exports="undefined"!=typeof module&&module.exports?module.exports=mingo:mingo,_=require("underscore")):(root.mingo=mingo,_=root._);var primitives=[_.isString,_.isBoolean,_.isNumber,_.isDate,_.isNull];mingo.Query=function(criteria){this.criteria=criteria,this._compiledSelectors=[],this._compile()},mingo.Query.prototype={_compile:function(){if(!_.isEmpty(this.criteria)&&_.isObject(this.criteria))for(var name in this.criteria){var value=this.criteria[name];if(_.contains(Ops.compoundOperators,name)){if(_.contains(["$not","$elemMatch"],name))throw new Error("Invalid operator");this._processOperator(name,name,value)}else{value=normalize(value);for(var operator in value)this._processOperator(name,operator,value[operator])}}},_processOperator:function(field,operator,value){var compiledSelector;compiledSelector=_.contains(Ops.simpleOperators,operator)?{test:function(obj){var fieldValue=mingo._resolve(obj,field);return simpleOperators[operator](fieldValue,value)}}:compoundOperators[operator](field,value),this._compiledSelectors.push(compiledSelector)},test:function(model){for(var match=!0,i=0;i<this._compiledSelectors.length;i++){var compiled=this._compiledSelectors[i];if(match=compiled.test(model,compiled.context),match===!1)break}return match},find:function(collection,projection){return new mingo.Cursor(collection,this,projection)}},mingo.Cursor=function(collection,query,projection){this.query=query,this.collection=collection,this._projection=projection,this._pipe=[],this._result=!1,this._position=0},mingo.Cursor.prototype={_fetch:function(){if(this._result===!1){!_.isEmpty(this._projection)&&_.isObject(this._projection)&&this._pipe.push({$project:this._projection});var aggregator=new mingo.Aggregator(this._pipe);this._result=_.filter(this.collection,this.query.test,this.query),this._result=aggregator.run(this._result)}return this._result},all:function(){return this._fetch()},one:function(){return _.first(this._fetch(),1)},count:function(){return this._fetch().length},skip:function(n){return this._pipe.push({$skip:n}),this},limit:function(n){return this._pipe.push({$limit:n}),this},sort:function(modifier){return this._pipe.push({$sort:modifier}),this},next:function(){return this.hasNext()?this._result[this._position++]:!1},hasNext:function(){return this._fetch().length>this._position},max:function(){},min:function(){},map:function(){}},mingo.Aggregator=function(operators){this._pipe=operators},mingo.Aggregator.prototype={run:function(collection){for(var i=0;i<this._pipe.length;i++){var operator=this._pipe[i];for(var key in operator)collection=pipelineOperators[key].apply(null,[collection,operator[key]])}return collection}},mingo._get=function(obj,field){return _.result(obj,field)},mingo._resolve=function(obj,field){if(!field)return void 0;for(var chain=field.split("."),value=obj,i=0;i<chain.length;i++){if(!_.has(value,chain[i])){value=void 0;break}value=mingo._get(value,chain[i])}return value},mingo.compile=function(criteria){return new mingo.Query(criteria)},mingo.find=function(collection,criteria,projection){return mingo.compile(criteria).find(collection,projection)},mingo.CollectionMixin={find:function(criteria,projection){return mingo.find(this.models,criteria,projection)}};var pipelineOperators={$group:function(collection,expr){var id=expr._id,groups=_.groupBy(collection,function(obj){return computeField(obj,id,id)});expr=_.omit(expr,"_id"),groups=_.pairs(groups);for(var result=[];groups.length>0;){var tuple=groups.pop(),obj={_id:tuple[0]};for(var key in expr)obj[key]=accumulate(tuple[1],key,expr[key]);result.push(obj)}return result},$match:function(collection,expr){var query=new mingo.Query(expr);return query.find(collection).all()},$project:function(collection,expr){var whitelist=[],blacklist=[],computeFields={};for(var key in expr){var obj=expr[key];1===obj?whitelist.push(key):0===obj?blacklist.push(key):(_.isString(obj)||_.isObject(obj))&&(computeFields[key]=obj)}var projected=[],filter=function(obj){return obj};whitelist.length>0?(_.contains(blacklist,"id")||whitelist.push("id"),filter=function(obj){return _.pick(obj,whitelist)}):blacklist.length>0&&(filter=function(obj){return _.omit(obj,blacklist)});for(var i=0;i<collection.length;i++){var record=collection[i];for(var field in computeFields)record=computeField(record,field,computeFields[field]);record=filter(record),projected.push(record)}return projected},$limit:function(collection,value){return _.first(collection,value)},$skip:function(collection,value){_.rest(collection,value)},$unwind:function(collection,expr){var result=[],field=expr.substr(1);return _.each(collection,function(obj){_.has(obj,field)&&_.isArray(obj[field])&&_.each(obj[field],function(item){var clone=_.clone(obj);clone[field]=item,result.push(clone)})}),result},$sort:function(collection,sortKeys){if(!_.isEmpty(sortKeys)&&_.isObject(sortKeys)){var modifiers=_.keys(sortKeys);modifiers.reverse().forEach(function(key){var grouped=_.groupBy(collection,function(obj){return obj[key]}),indexes=_.keys(grouped),sorted=_.sortBy(indexes,function(obj){return obj});-1===sortKeys[key]&&sorted.reverse(),collection=[],_.each(sorted,function(item){Array.prototype.push.apply(collection,grouped[item])})})}return collection}},compoundOperators={$and:function(selector,value){if(!_.isArray(value))throw new Error("Invalid expression for $and criteria");var queries=[];return _.each(value,function(expr){queries.push(new mingo.Query(expr))}),{test:function(obj){for(var i=0;i<queries.length;i++)if(queries[i].test(obj)===!1)return!1;return!0}}},$or:function(selector,value){if(!_.isArray(value))throw new Error("Invalid expression for $or criteria");var queries=[];return _.each(value,function(expr){queries.push(new mingo.Query(expr))}),{test:function(obj){for(var i=0;i<queries.length;i++)if(queries[i].test(obj)===!0)return!0;return!1}}},$nor:function(selector,value){if(!_.isArray(value))throw new Error("Invalid expression for $nor criteria");var query=this.$or("$or",value);return{test:function(obj){return!query.test(obj)}}},$not:function(selector,value){var criteria={};criteria[selector]=normalize(value);var query=new mingo.Query(criteria);return{test:function(obj){return!query.test(obj)}}},$elemMatch:function(){throw Error("$elemMatch not implemented yet!")},$where:function(){throw Error("$where is Bad Bad Bad and SHALL NOT be implemented! Sorry :(")}},simpleOperators={$eq:function(a,b){return _.isEqual(a,b)},$ne:function(a,b){return!this.$eq(a,b)},$in:function(a,b){return _.isArray(a)||(a=[a]),_.intersection(a,b).length>0},$nin:function(a,b){return _.isUndefined(a)||!this.$in(a,b)},$lt:function(a,b){return b>a},$lte:function(a,b){return b>=a},$gt:function(a,b){return a>b},$gte:function(a,b){return a>=b},$mod:function(a,b){return _.isNumber(a)&&_.isArray(b)&&2===b.length&&a%b[0]===b[1]},$regex:function(a,b){return _.isString(a)&&_.isRegExp(b)&&!!a.match(b)},$exists:function(a,b){return b===!1&&_.isUndefined(a)||b===!0&&!_.isUndefined(a)},$all:function(a,b){return _.isArray(a)&&_.isArray(b)&&_.isEqual(_.intersection(b,a),b)},$size:function(a,b){return _.isArray(a)&&_.isNumber(b)&&a.length===b}},groupOperators={$addToSet:function(collection,expr){var result=_.map(collection,function(obj){return computeField(obj,"",expr)});return _.uniq(result)},$sum:function(collection,expr){if(_.isNumber(expr))return collection.length*expr;var result=_.reduce(collection,function(acc,obj){return acc+computeField(obj,"",expr)},0);return result},$max:function(collection,expr){return _.max(collection,function(obj){return computeField(obj,"",expr)})},$min:function(collection,expr){return _.min(collection,function(obj){return computeField(obj,"",expr)})},$avg:function(collection,expr){return this.$sum(collection,expr)/collection.length},$push:function(collection,expr){return _.map(collection,function(obj){return computeField(obj,"",expr)})},$first:function(collection,expr){return collection.length>0?computeField(collection[0],"",expr):void 0},$last:function(collection,expr){return collection.length>0?computeField(collection[collection.length-1],"",expr):void 0}},aggregateOperators={$add:function(ctx){var result=0;return flatten(ctx,_.toArray(arguments.splice(1)),function(val){result+=val}),result},$subtract:function(ctx){var args=flatten(ctx,_.toArray(arguments.splice(1)));return args[0]-args[1]},$divide:function(ctx){var args=flatten(ctx,_.toArray(arguments.splice(1)));return args[0]/args[1]},$multiply:function(ctx){var result=1;return flatten(ctx,_.toArray(arguments.splice(1)),function(val){result*=val}),result},$mod:function(ctx){var args=flatten(ctx,_.toArray(arguments.splice(1)));return args[0]%args[1]},$cmp:function(ctx){var args=flatten(ctx,_.toArray(arguments.splice(1)));return args[0]>args[1]?1:args[0]<args[1]?-1:0},$concat:function(ctx){var args=flatten(ctx,_.toArray(arguments.splice(1)));return args.join("")},$strcasecmp:function(ctx){var args=flatten(ctx,_.toArray(arguments.splice(1)));return args[0]=args[0].toUpperCase(),args[1]=args[1].toUpperCase(),args[0]>args[1]?1:args[0]<args[1]?-1:0},$substr:function(ctx){var args=flatten(ctx,_.toArray(arguments.splice(1)));return args[0].substr(args[1],args[2])},$toLower:function(ctx){var args=flatten(ctx,_.toArray(arguments.splice(1)));return args[0].toLowerCase()},$toUpper:function(ctx){var args=flatten(ctx,_.toArray(arguments.splice(1)));return args[0].toUpperCase()}};_.each(["$eq","$ne","$gt","$gte","$lt","$lte"],function(op){aggregateOperators[op]=function(ctx){var args=flatten(ctx,_.toArray(arguments.splice(1)));simpleOperators[op](args[0],args[1])}});var Ops={simpleOperators:_.keys(simpleOperators),compoundOperators:_.keys(compoundOperators),aggregateOperators:_.keys(aggregateOperators),groupOperators:_.keys(groupOperators),pipelineOperators:_.keys(pipelineOperators)}}).call(this);